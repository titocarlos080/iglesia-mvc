<!DOCTYPE html>
<html>

<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1">
   <title>Aportes</title>
   <link rel="stylesheet" href="/css/styles.css">
   <style>
      table {
         border-collapse: collapse;
      }

      th,
      td {
         border: 1px solid #000;
         padding: 8px;
         text-align: left;
      }

      th {
         background-color: #726c6c;
      }

      th,
      td:hover {
         background-color: #9d9595;
         z-index: 1;

      }

      .form_cargo {
         margin-bottom: 20px;
      }

      .form_cargo input[type="text"] {
         width: 250px;
         padding: 5px;
         margin-right: 10px;
      }

      .form_cargo input[type="submit"] {
         padding: 5px 15px;
         background-color: #4CAF50;
         color: white;
         border: none;
         cursor: pointer;
      }

      .edit-btn,
      .delete-btn {
         padding: 2px 5px;
         margin-right: 5px;
         text-decoration: none;
         color: #333;
         border: 1px solid #333;
         border-radius: 3px;
      }

      .edit-btn:hover,
      .delete-btn:hover {
         background-color: #333;
         color: white;
      }

/* Estilos del modal */
.modal {
   display: none; /* Por defecto oculto */
   position: fixed; /* Fijar posición */
   z-index: 1; /* Sobre todos los demás elementos */
   left: 0;
   top: 0;
   width: 100%;
   height: 100%;
   overflow: auto; /* Permite hacer scroll si el contenido es demasiado grande */
   background-color: rgba(0,0,0,0.4); /* Fondo semi-transparente */
}

/* Contenido del modal */
.modal-content {
   background-color: #fefefe;
   margin: 15% auto; /* Centrar vertical y horizontalmente */
   padding: 20px;
   border: 1px solid #888;
   width: 50%; /* Ancho del modal, ajusta según necesites */
   max-width: 500px; /* Ancho máximo del modal */
   box-shadow: 0 4px 8px rgba(0,0,0,0.2);
   position: relative;
}

/* Botón para cerrar el modal */
.close {
   color: #aaa;
   float: right;
   font-size: 28px;
   font-weight: bold;
}

.close:hover,
.close:focus {
   color: black;
   text-decoration: none;
   cursor: pointer;
}

/* Formulario dentro del modal */
.modal-content form {
   display: grid;
   gap: 10px;
}

/* Ajustes de los elementos del formulario */
.modal-content label {
   font-weight: bold;
}

.modal-content input[type="text"] {
   width: 100%;
   padding: 10px;
}

.modal-content button {
   padding: 10px 20px;
   background-color: #4CAF50;
   color: white;
   border: none;
   cursor: pointer;
}

.modal-content button:hover {
   background-color: #45a049;
}


   </style>
</head>

<%- include("../templates/nav/nav1.ejs") %>

   <body>
      <h1>Cargos</h1>
      <div class="container-cargo">
         <div class="form_cargo">
            <h2>Agregar Nuevo Cargo</h2>
            <form action="/cargos/add" method="post">
               <input type="text" name="nombre" placeholder="Nombre del Cargo" required>
               <input type="submit" value="Agregar">
            </form>
         </div>

         <h2>Listado de Cargos</h2>
         <div id="modalEditar" class="modal" style="display: none;">
            <div class="modal-content">
                <span class="close" onclick="cerrarFormEditar()">&times;</span>
                <h2>Editar Cargo</h2>
                <form id="formEditarCargo" action="/cargos/edit" method="post">
                    <input type="hidden" id="editCargoId" name="id">
                    <div>
                        <label for="editCargoNombre">Nombre del Cargo:</label>
                        <input type="text" id="editCargoNombre" name="nombre" required>
                    </div>
                    <div>
                        <button onclick="guardarCambios()">Guardar Cambios</button>
                    </div>
                </form>
            </div>
        </div>
        
         <table>
            <tr>
               <th>ID</th>
               <th>Nombre</th>
               <th>Acciones</th>
            </tr>
            <% cargos.forEach(cargo=> { %>
               <tr>
                  <td>
                     <%= cargo.id %>
                  </td>
                  <td>
                     <%= cargo.nombre %>
                  </td>

                  <td>
                     <a class="edit-btn" onclick="abrirFormEditar('<%= cargo.id %>', '<%= cargo.nombre %>')">Editar</a>

                     <a class="delete-btn" href="/cargos/delete/<%= cargo.id %>">Eliminar</a>
                  </td>


               </tr>
               <% }); %>
         </table>

      </div>


   </body>
   <footer>

      <%- include("../templates/foot/footer1.ejs") %>

   </footer>


   <script>
      // Obtener la ventana modal y los elementos del formulario
const modal = document.getElementById("modalEditar");
const form = document.getElementById("formEditarCargo");
const cargoIdInput = document.getElementById("editCargoId");
const cargoNombreInput = document.getElementById("editCargoNombre");

// Función para abrir la ventana modal y llenar el formulario con los datos del cargo
function abrirFormEditar(cargoId, cargoNombre) {
    cargoIdInput.value = cargoId;
    cargoNombreInput.value = cargoNombre;
    modal.style.display = "block";
 }

// Función para cerrar la ventana modal
function cerrarFormEditar() {
    modal.style.display = "none";
}

 

// Agregar evento submit al formulario para enviar la solicitud de edición
function guardarCambios() {
    

    // Obtener los datos del formulario
    const formData = new FormData(form);

    // Realizar la solicitud POST para editar el cargo
    fetch("/cargos/edit", {
        method: "POST",
        body: formData
    })
    .then(response => {
        if (response.ok) {
            // Si la respuesta es exitosa, cerrar la ventana modal
            cerrarFormEditar();
       // Recargar la página para reflejar los cambios
            window.location.reload();
        } else {
            // Si hay un error, mostrar un mensaje de error
            console.error("Error al editar el cargo:", response.status);
        }
    })
    .catch(error => {
        console.error("Error al editar el cargo:", error);
    });
};

   </script>
</html>